// diagram for query_sub_system.md
//
// Query process flow diagram
//
// This diagram is generated by mscgen
// which can be installed on ubuntu by
// sudo apt-get install mscgen
//
// genereate diagram with
// mscgen -T png -i query_sub_system.msc -F /usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf
//
msc {

	// Image defaults
	width="1200", wordwraparcs="1";

	
	// declare objects
	// This is a cluster with 3 nodes for exposition purposes
	client_connection, riak_kv_qry_queue, riak_kv_qry_worker, vnode1, vnode2, vnode3;

	|||;
	client_connection  note client_connection   [label="\nthe client connection an be\n Protocol Buffers or HTTP\n"];
	|||;
	client_connection  =>   client_connection  [label="compile query"];
	|||;
	client_connection  note client_connection   [label="\ncompilation defines subqueries and performs type-checking\n"];
	|||;
	client_connection  =>   riak_kv_qry_queue [label="submit query"];
	|||;
	riak_kv_qry_queue  =>   riak_kv_qry_worker [label="submit query"];
	|||;
	riak_kv_qry_worker note riak_kv_qry_worker [label="\nsame submission path for aggregation and row queries\n"];
	|||;
	riak_kv_qry_worker =>  riak_kv_qry_worker [label="call start_state on functions"];
	|||;
	riak_kv_qry_worker -> vnode1 [label="submit sub-query"];
	riak_kv_qry_worker -> vnode2 [label="submit sub-query"];
	riak_kv_qry_worker -> vnode3 [label="submit sub-query"];
	|||;
	...;
	|||;
	vnode2 -> riak_kv_qry_worker [label="chunk returns"];
	|||;
	riak_kv_qry_worker => riak_kv_qry_worker [label="call the aggegrate fns on the chunk using the continuation state"];
	|||;
	...;
	|||;
	riak_kv_qry_worker note riak_kv_qry_worker [label="\ncontinue until complete results set is returns\n"];
	|||;
	riak_kv_qry_worker => riak_kv_qry_worker [label="call finalise on last continuation"];
	|||;
	riak_kv_qry_worker -> client_connection [label="return values to user"];



}