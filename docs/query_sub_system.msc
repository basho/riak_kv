// diagram for query_sub_system.md
//
// Query process flow diagram
//
// This diagram is generated by mscgen
// which can be installed on ubuntu by
// sudo apt-get install mscgen
//
// genereate diagram with
// mscgen -T png -i query_sub_system.msc -F /usr/share/fonts/truetype/dejavu/DejaVuSansMono.ttf
//
msc {

	// Image defaults
	width="1200", wordwraparcs="1";

	
	// declare objects
	// This is a cluster with 3 nodes for exposition purposes
	"client connection", riak_ts_qry_queue, riak_ts_qry_1, riak_ts_qry_2, riak_ts_qry_3;

	|||;
	"client connection" => riak_ts_qry_queue    [label="new query"];
	riak_ts_qry_queue   => riak_ts_qry_queue    [label="are there available workers?"];
	|||;
	...;
	--- [label="YES there is an available worker"];
	|||;
	riak_ts_qry_queue ->   riak_ts_qry_1 [label="dispatch query to query worker"];
	|||;
	riak_ts_qry_1     note riak_ts_qry_1 [label="wait for query to run"];
	|||;
	riak_ts_qry_1     ->   "client connection" [label="return results"];
	|||;
	...;
	--- [label="NO there are no available workers"];
	|||;
	riak_ts_qry_queue   => riak_ts_qry_queue [label="is the query queue full?"];
	|||;
	...;
	--- [label="NO the queue is not full"];
	|||;
	riak_ts_qry_queue   => riak_ts_qry_queue   [label="Put Query On Queue"];
	|||;
	riak_ts_qry_queue note riak_ts_qry_queue   [label="wait for query worker to request work"];
	|||;
	riak_ts_qry_3     ->   riak_ts_qry_queue   [label="my previous query has finished, give me work"];
	|||;
	riak_ts_qry_queue ->   riak_ts_qry_3       [label="dispatch query to query worker"];
	|||;
	riak_ts_qry_3     note riak_ts_qry_3       [label="wait for query to run"];
	|||;
	riak_ts_qry_3     ->   "client connection" [label="return results"];
	|||;
	...;
	--- [label="YES the queue is full"];
	|||;
	riak_ts_qry_queue -> "client connection" [label="overload error message"];

}